#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using Zakar.Models;

namespace Zakar.Models	
{
	[Table("UserProfile", SchemaName = "dbo")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private int _userId;
		[Column("UserId", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("_userId")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.ComponentModel.DataAnnotations.Key()]
		public virtual int UserId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if(this._userId != value)
				{
					this.OnPropertyChanging("UserId");
					this._userId = value;
					this.OnPropertyChanged("UserId");
				}
			}
		}
		
		private string _userName;
		[Column("UserName", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("_userName")]
		public virtual string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if(this._userName != value)
				{
					this.OnPropertyChanging("UserName");
					this._userName = value;
					this.OnPropertyChanged("UserName");
				}
			}
		}
		
		private string _firstName;
		[Column("FirstName", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("_firstName")]
		public virtual string FirstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if(this._firstName != value)
				{
					this.OnPropertyChanging("FirstName");
					this._firstName = value;
					this.OnPropertyChanged("FirstName");
				}
			}
		}
		
		private string _lastName;
		[Column("LastName", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("_lastName")]
		public virtual string LastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if(this._lastName != value)
				{
					this.OnPropertyChanging("LastName");
					this._lastName = value;
					this.OnPropertyChanged("LastName");
				}
			}
		}
		
		private string _phoneNumber;
		[Column("PhoneNumber", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "nvarchar(max)")]
		[Storage("_phoneNumber")]
		public virtual string PhoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if(this._phoneNumber != value)
				{
					this.OnPropertyChanging("PhoneNumber");
					this._phoneNumber = value;
					this.OnPropertyChanged("PhoneNumber");
				}
			}
		}
		
		private int? _churchId;
		[Column("ChurchId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("_churchId")]
		public virtual int? ChurchId
		{
			get
			{
				return this._churchId;
			}
			set
			{
				if(this._churchId != value)
				{
					this.OnPropertyChanging("ChurchId");
					this._churchId = value;
					this.OnPropertyChanged("ChurchId");
				}
			}
		}
		
		private IList<Webpages_Role> _webpages_Roles = new List<Webpages_Role>();
		[JoinTableAssociation(TableName = "webpages_UsersInRoles", SchemaName = "dbo", OwnerColumns = "UserId", TargetColumns = "RoleId", SourceConstraint = "fk_UserId", TargetConstraint = "fk_RoleId")]
		[Column("UserId", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Column("RoleId", OpenAccessType = OpenAccessType.Int32, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("_webpages_Roles")]
		public virtual IList<Webpages_Role> Webpages_Roles
		{
			get
			{
				return this._webpages_Roles;
			}
		}
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
