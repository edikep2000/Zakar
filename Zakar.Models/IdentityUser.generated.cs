#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using Zakar.Models;

namespace Zakar.Models	
{
	[Table("IdentityUser", UpdateSchema = true)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class IdentityUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private int _id;
		[Column("Id", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int", Converter = "OpenAccessRuntime.Data.IntConverter")]
		[Storage("_id")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.ComponentModel.DataAnnotations.Key()]
		public virtual int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if(this._id != value)
				{
					this.OnPropertyChanging("Id");
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		private string _firstName;
		[Column("FirstName", OpenAccessType = OpenAccessType.StringVariableLength, Length = 255, Scale = 0, SqlType = "varchar", Converter = "OpenAccessRuntime.Data.VariableLengthAnsiStringConverter")]
		[Storage("_firstName")]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string FirstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if(this._firstName != value)
				{
					this.OnPropertyChanging("FirstName");
					this._firstName = value;
					this.OnPropertyChanged("FirstName");
				}
			}
		}
		
		private string _lastName;
		[Column("LastName", OpenAccessType = OpenAccessType.StringVariableLength, Length = 255, Scale = 0, SqlType = "varchar", Converter = "OpenAccessRuntime.Data.VariableLengthAnsiStringConverter")]
		[Storage("_lastName")]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string LastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if(this._lastName != value)
				{
					this.OnPropertyChanging("LastName");
					this._lastName = value;
					this.OnPropertyChanged("LastName");
				}
			}
		}
		
		private string _phoneNumber;
		[Column("PhoneNumber", OpenAccessType = OpenAccessType.StringVariableLength, Length = 255, Scale = 0, SqlType = "varchar", Converter = "OpenAccessRuntime.Data.VariableLengthAnsiStringConverter")]
		[Storage("_phoneNumber")]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string PhoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if(this._phoneNumber != value)
				{
					this.OnPropertyChanging("PhoneNumber");
					this._phoneNumber = value;
					this.OnPropertyChanged("PhoneNumber");
				}
			}
		}
		
		private string _userName;
		[Column("UserName", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "varchar", Converter = "OpenAccessRuntime.Data.VariableLengthAnsiStringConverter")]
		[Storage("_userName")]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public virtual string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if(this._userName != value)
				{
					this.OnPropertyChanging("UserName");
					this._userName = value;
					this.OnPropertyChanged("UserName");
				}
			}
		}
		
		private string _passwordHash;
		[Column("PasswordHash", OpenAccessType = OpenAccessType.StringVariableLength, Length = 255, Scale = 0, SqlType = "varchar", Converter = "OpenAccessRuntime.Data.VariableLengthAnsiStringConverter")]
		[Storage("_passwordHash")]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual string PasswordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if(this._passwordHash != value)
				{
					this.OnPropertyChanging("PasswordHash");
					this._passwordHash = value;
					this.OnPropertyChanged("PasswordHash");
				}
			}
		}
		
		private string _securityStamp;
		[Column("SecurityStamp", OpenAccessType = OpenAccessType.StringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "varchar", Converter = "OpenAccessRuntime.Data.VariableLengthAnsiStringConverter")]
		[Storage("_securityStamp")]
		[System.ComponentModel.DataAnnotations.StringLength(255)]
		public virtual string SecurityStamp
		{
			get
			{
				return this._securityStamp;
			}
			set
			{
				if(this._securityStamp != value)
				{
					this.OnPropertyChanging("SecurityStamp");
					this._securityStamp = value;
					this.OnPropertyChanged("SecurityStamp");
				}
			}
		}
		
		private DateTime _dateCreated;
		[Column("DateCreated", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime", Converter = "OpenAccessRuntime.Data.MssqlMinDateConverter")]
		[Storage("_dateCreated")]
		[System.ComponentModel.DataAnnotations.DataType(System.ComponentModel.DataAnnotations.DataType.DateTime)]
		[System.ComponentModel.DataAnnotations.Required()]
		public virtual DateTime DateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if(this._dateCreated != value)
				{
					this.OnPropertyChanging("DateCreated");
					this._dateCreated = value;
					this.OnPropertyChanged("DateCreated");
				}
			}
		}
		
		private int? _failedAccessAttempts;
		[Column("FailedAccessAttempts", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int", Converter = "OpenAccessRuntime.Data.IntConverter")]
		[Storage("_failedAccessAttempts")]
		public virtual int? FailedAccessAttempts
		{
			get
			{
				return this._failedAccessAttempts;
			}
			set
			{
				if(this._failedAccessAttempts != value)
				{
					this.OnPropertyChanging("FailedAccessAttempts");
					this._failedAccessAttempts = value;
					this.OnPropertyChanged("FailedAccessAttempts");
				}
			}
		}
		
		private DateTime? _dateOfLastFailedAccessAttempt;
		[Column("DateOfLastFailedAccessAttempt", OpenAccessType = OpenAccessType.DateTime, IsNullable = true, Length = 0, Scale = 0, SqlType = "datetime", Converter = "OpenAccessRuntime.Data.MssqlMinDateConverter")]
		[Storage("_dateOfLastFailedAccessAttempt")]
		[System.ComponentModel.DataAnnotations.DataType(System.ComponentModel.DataAnnotations.DataType.DateTime)]
		public virtual DateTime? DateOfLastFailedAccessAttempt
		{
			get
			{
				return this._dateOfLastFailedAccessAttempt;
			}
			set
			{
				if(this._dateOfLastFailedAccessAttempt != value)
				{
					this.OnPropertyChanging("DateOfLastFailedAccessAttempt");
					this._dateOfLastFailedAccessAttempt = value;
					this.OnPropertyChanged("DateOfLastFailedAccessAttempt");
				}
			}
		}
		
		private int? _zoneId;
		[Column("ZoneId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int", Converter = "OpenAccessRuntime.Data.IntConverter")]
		[Storage("_zoneId")]
		public virtual int? ZoneId
		{
			get
			{
				return this._zoneId;
			}
			set
			{
				if(this._zoneId != value)
				{
					this.OnPropertyChanging("ZoneId");
					this._zoneId = value;
					this.OnPropertyChanged("ZoneId");
				}
			}
		}
		
		private int? _groupId;
		[Column("GroupId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int", Converter = "OpenAccessRuntime.Data.IntConverter")]
		[Storage("_groupId")]
		public virtual int? GroupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				if(this._groupId != value)
				{
					this.OnPropertyChanging("GroupId");
					this._groupId = value;
					this.OnPropertyChanged("GroupId");
				}
			}
		}
		
		private int? _churchId;
		[Column("ChurchId", OpenAccessType = OpenAccessType.Int32, IsNullable = true, Length = 0, Scale = 0, SqlType = "int", Converter = "OpenAccessRuntime.Data.IntConverter")]
		[Storage("_churchId")]
		public virtual int? ChurchId
		{
			get
			{
				return this._churchId;
			}
			set
			{
				if(this._churchId != value)
				{
					this.OnPropertyChanging("ChurchId");
					this._churchId = value;
					this.OnPropertyChanged("ChurchId");
				}
			}
		}
		
		private IList<IdentityUserClaim> _identityUserClaims = new List<IdentityUserClaim>();
		[Collection(InverseProperty = "IdentityUser", IsManaged = true)]
		[Storage("_identityUserClaims")]
		public virtual IList<IdentityUserClaim> IdentityUserClaims
		{
			get
			{
				return this._identityUserClaims;
			}
		}
		
		private IList<IdentityUserInRole> _identityUserInRoles = new List<IdentityUserInRole>();
		[Collection(InverseProperty = "IdentityUser", Depend = true, IsManaged = true)]
		[Storage("_identityUserInRoles")]
		public virtual IList<IdentityUserInRole> IdentityUserInRoles
		{
			get
			{
				return this._identityUserInRoles;
			}
		}
		
		private IdentityUserLogin _identityUserLogin;
		[Reference(InverseProperty = "IdentityUser")]
		[Storage("_identityUserLogin")]
		public virtual IdentityUserLogin IdentityUserLogin
		{
			get
			{
				return this._identityUserLogin;
			}
			set
			{
				if(this._identityUserLogin != value)
				{
					this.OnPropertyChanging("IdentityUserLogin");
					this._identityUserLogin = value;
					this.OnPropertyChanged("IdentityUserLogin");
				}
			}
		}
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
