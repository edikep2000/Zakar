#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using Zakar.Models;

namespace Zakar.Models	
{
	[NamingSettings(SourceStrategy = NamingSourceStrategy.Property, RemoveLeadingUnderscores = true, ResolveReservedWords = true, UseDelimitedSQL = true, WordBreak = "_")]
	public partial class EntitiesModel : OpenAccessContext, IEntitiesModelUnitOfWork
	{
		private static string connectionStringName = @"Unibencellinfo_partnershipConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = AttributesMetadataSource.FromContext(typeof(EntitiesModel));
		
		public EntitiesModel()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public EntitiesModel(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public EntitiesModel(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public EntitiesModel(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public EntitiesModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<Webpages_Role> Webpages_Roles 
		{
			get
			{
				return this.GetAll<Webpages_Role>();
			}
		}
		
		public IQueryable<Webpages_OAuthMembership> Webpages_OAuthMemberships 
		{
			get
			{
				return this.GetAll<Webpages_OAuthMembership>();
			}
		}
		
		public IQueryable<Webpages_Membership> Webpages_Memberships 
		{
			get
			{
				return this.GetAll<Webpages_Membership>();
			}
		}
		
		public IQueryable<UserProfile> UserProfiles 
		{
			get
			{
				return this.GetAll<UserProfile>();
			}
		}
		
		public IQueryable<SystemSetting> SystemSettings 
		{
			get
			{
				return this.GetAll<SystemSetting>();
			}
		}
		
		public IQueryable<Setting> Settings 
		{
			get
			{
				return this.GetAll<Setting>();
			}
		}
		
		public IQueryable<QueuedNotification> QueuedNotifications 
		{
			get
			{
				return this.GetAll<QueuedNotification>();
			}
		}
		
		public IQueryable<Partnership> Partnerships 
		{
			get
			{
				return this.GetAll<Partnership>();
			}
		}
		
		public IQueryable<PartnershipArm> PartnershipArms 
		{
			get
			{
				return this.GetAll<PartnershipArm>();
			}
		}
		
		public IQueryable<Partner> Partners 
		{
			get
			{
				return this.GetAll<Partner>();
			}
		}
		
		public IQueryable<Notification> Notifications 
		{
			get
			{
				return this.GetAll<Notification>();
			}
		}
		
		public IQueryable<NotificationCategory> NotificationCategories 
		{
			get
			{
				return this.GetAll<NotificationCategory>();
			}
		}
		
		public IQueryable<NonValidatedPartnershipRecord> NonValidatedPartnershipRecords 
		{
			get
			{
				return this.GetAll<NonValidatedPartnershipRecord>();
			}
		}
		
		public IQueryable<Group> Groups 
		{
			get
			{
				return this.GetAll<Group>();
			}
		}
		
		public IQueryable<Currency> Currencies 
		{
			get
			{
				return this.GetAll<Currency>();
			}
		}
		
		public IQueryable<Church> Churches 
		{
			get
			{
				return this.GetAll<Church>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of EntitiesModel.
		/// </summary>
		/// <param name="config">The BackendConfiguration of EntitiesModel.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IEntitiesModelUnitOfWork : IUnitOfWork
	{
		IQueryable<Webpages_Role> Webpages_Roles
		{
			get;
		}
		IQueryable<Webpages_OAuthMembership> Webpages_OAuthMemberships
		{
			get;
		}
		IQueryable<Webpages_Membership> Webpages_Memberships
		{
			get;
		}
		IQueryable<UserProfile> UserProfiles
		{
			get;
		}
		IQueryable<SystemSetting> SystemSettings
		{
			get;
		}
		IQueryable<Setting> Settings
		{
			get;
		}
		IQueryable<QueuedNotification> QueuedNotifications
		{
			get;
		}
		IQueryable<Partnership> Partnerships
		{
			get;
		}
		IQueryable<PartnershipArm> PartnershipArms
		{
			get;
		}
		IQueryable<Partner> Partners
		{
			get;
		}
		IQueryable<Notification> Notifications
		{
			get;
		}
		IQueryable<NotificationCategory> NotificationCategories
		{
			get;
		}
		IQueryable<NonValidatedPartnershipRecord> NonValidatedPartnershipRecords
		{
			get;
		}
		IQueryable<Group> Groups
		{
			get;
		}
		IQueryable<Currency> Currencies
		{
			get;
		}
		IQueryable<Church> Churches
		{
			get;
		}
	}
}
#pragma warning restore 1591
