@using Zakar.Common.Enums
@using Zakar.Controllers.Extensions
@model Zakar.ViewModels.ChurchViewModel


<div class="form-group">
    @Html.LabelFor(m => m.Name, new{@class="control-label"})
    @Html.TextBoxFor(M => M.Name, new {@class="form-control"})
    <small class="text-danger">
        @Html.ValidationMessageFor(m => m.Name)
    </small>
</div>


<div class="form-group">
    @Html.LabelFor(m => m.DefaultCurrencyId, new{@class="control-label"})
    <br/>
    @Html.Awe().AjaxDropdownFor(m => m.DefaultCurrencyId).Url(Url.Action("GetCurrencies", "AjaxList")).HtmlAttributes(new{@class="form-control"})
    <small class="text-danger">@Html.ValidationMessageFor(m => m.DefaultCurrencyId)</small>
</div>


<div class="form-group">
   
    @if (User.IsInRole(RolesEnum.PORTAL_ADMIN.ToString()))
    { @Html.LabelFor(m => m.GroupId, new { @class = "control-label" })
        <br />
        @Html.Awe().AjaxDropdownFor(m => m.GroupId).Url(Url.Action("GetGroups", "AjaxList")).HtmlAttributes(new { @class = "form-control" })
    <small class="text-danger">@Html.ValidationMessageFor(m => m.GroupId)</small>
    }
    else if (User.IsInRole(RolesEnum.ZONE_ADMIN.ToString()))
    {
        @Html.LabelFor(m => m.GroupId, new {@class = "control-label"})
        <br />
        @Html.Awe().AjaxDropdownFor(m => m.GroupId).Url(Url.Action("GetGroups", "AjaxList")).Parameter("zoneId", ((Controller) this.ViewContext.Controller).CurrentZoneAdministered().Result.Id).HtmlAttributes(new {@class = "form-control"})
        <small class="text-danger">@Html.ValidationMessageFor(m => m.GroupId)</small>
    }
    else
    {
        @Html.HiddenFor(m => m.GroupId)
    }


</div>