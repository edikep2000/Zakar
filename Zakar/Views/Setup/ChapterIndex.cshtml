@using Microsoft.Ajax.Utilities
@using Zakar.Common
@using Zakar.Common.Enums
@using Zakar.Controllers.Extensions

@{
    ViewBag.Title = "Manage Churches";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var modelExists = ViewBag.ModelExists is bool && (bool) ViewBag.ModelExists;
}


@Html.Partial("_headerPartial")

@Html.Awe().InitPopupForm().Name("editChapter").Url(Url.Action("ChapterEdit", "Setup")).Modal(true).OkText("Save Changes").Title("Edit Chapter").Group("Chapter").Success("refreshGrid('grdChapters')")
@Html.Awe().InitPopupForm().Url(Url.Action("ChapterDelete", "Setup")).Name("deleteChapter").Group("Group").Modal(true).Title("Confirm Delete").OkText("OK").CancelText("NO").Parameter("gridId", "grdChapters").Success("refreshGrid('grdChapters')")

<br/>
<br/>

<div class="wrapper wrapper-content white-bg">
    <div class="row">
        <div class="col-lg-12">
          
          
                <div class="ibox-content float-e-margins">
                    
                    <button type="button" class="btn btn-primary" onclick="awe.open('createChapter')"><i class="fa fa-plus-o"></i> New Chapter</button>
                    <br/>
                    @Html.Awe().InitPopupForm().Name("createChapter").Url(Url.Action("ChapterCreate","Setup")).Modal(true).OkText("Save").Title("New Chapter").Group("Chapter").Success("refreshGrid('grdChapters')")
              
                    @if (User.IsInRole(RolesEnum.PORTAL_ADMIN.ToString()))
                    {
                        <div class="form-group">
                            @Html.Awe().AjaxDropdown("zoneId").Url(Url.Action("GetZones","AjaxList")).HtmlAttributes(new{@class="form-control"})
                            @Html.Awe().AjaxDropdown("groupId").Url(Url.Action("GetGroups","AjaxList")).Parent("zoneId", "zoneId").HtmlAttributes(new{@class="form-control"})
                        </div>
                        
                        @Html.Awe().Grid("grdChapters").Groupable(true).Parent("zoneId", "zoneId").Parent("groupId","groupId").LoadOnParentChange(true).Url(Url.Action("ChapterRead", "ChapterGrid")).PageSize(20).Columns(
                    new Column() { Name = "Id", Hidden = true },
                    new Column() { Name = "UniqueId", Width = 180, Hidden = false, Header = "Id", Groupable = false },
                    new Column() { Name = "ZoneName", Groupable = true, Header = "Zone" },
                    new Column() { Name = "GroupName", Groupable = true, Header = "Group" },
                    new Column() { Name = "Name", Groupable = false },
                    new Column() { Width = 60, ClientFormat = @Utils.EditFormat("editChapter") },
                    new Column() { Width = 60, ClientFormat = @Utils.DeleteFormat("deleteChapter") },
                    new Column() { Width = 150, ClientFormat = "<a href=\"/Setup/ChapterDetails/.Id\" class='btn btn-primary' title='Reports'>Partnership</a>" })
                    }
                    else if (User.IsInRole(RolesEnum.ZONE_ADMIN.ToString()))
                    {
                        var zoneId = ((Controller)this.ViewContext.Controller).CurrentZoneAdministered().Result.Id;

                        <div class="form-group">
                            @Html.Awe().AjaxDropdown("groupId").Url(Url.Action("GetGroups", "AjaxList")).Parameter("zoneId", zoneId).HtmlAttributes(new { @class = "form-control" })
                        </div>
                        

                        @Html.Awe().Grid("grdChapters").Groupable(true).Url(Url.Action("ChapterRead", "ChapterGrid")).Parent("groupId","groupId").Parameter("zoneId", zoneId).PageSize(20).Columns(
                    new Column() { Name = "Id", Hidden = true },
                    new Column() { Name = "UniqueId", Width = 180, Hidden = false, Header = "Id", Groupable = false },
                    new Column() { Name = "ZoneName", Groupable = true, Header = "Zone" },
                    new Column() { Name = "GroupName", Groupable = true, Header = "Group" },
                    new Column() { Name = "Name", Groupable = false },
                    new Column() { Width = 60, ClientFormat = @Utils.EditFormat("editChapter") },
                    new Column() { Width = 60, ClientFormat = @Utils.DeleteFormat("deleteChapter") },
                    new Column() { Width = 150, ClientFormat = "<a href=\"/Setup/ChapterDetails/.Id\" class='btn btn-primary' title='Reports'>Partnership</a>" })
                    }
                    else if (User.IsInRole(RolesEnum.GROUP_ADMIN.ToString()))
                    {
                        var groupId = ((Controller) this.ViewContext.Controller).CurrentGroupAdministered().Result.Id;
                        @Html.Awe().Grid("grdChapters").Groupable(true).Url(Url.Action("ChapterRead", "ChapterGrid")).Parameter("groupId", groupId).PageSize(20).Columns(
                    new Column() { Name = "Id", Hidden = true },
                    new Column() { Name = "UniqueId", Width = 180, Hidden = false, Header = "Id", Groupable = false },
                    new Column() { Name = "ZoneName", Groupable = true, Header = "Zone" },
                    new Column() { Name = "GroupName", Groupable = true, Header = "Group" },
                    new Column() { Name = "Name", Groupable = false },
                    new Column() { Width = 60, ClientFormat = @Utils.EditFormat("editChapter") },
                    new Column() { Width = 60, ClientFormat = @Utils.DeleteFormat("deleteChapter") },
                    new Column() { Width = 150, ClientFormat = "<a href=\"/Setup/ChapterDetails/.Id\" class='btn btn-primary' title='Reports'>Partnership</a>" })
                    }
                   
                   
                </div>
               
           
        </div>
    </div>
</div>